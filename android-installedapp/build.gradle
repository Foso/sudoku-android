/*
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply plugin: 'com.android.application'


// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion buildConfig.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "me.kalicinski.sudoku"
        versionCode buildConfig.version
        versionName buildConfig.versionName
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debugMini {
            initWith debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            matchingFallbacks = ['debug']
        }

        debugMiniOptim {
            initWith debugMini
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
            matchingFallbacks = ['debug']
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }

        releaseOptim {
            initWith release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
            matchingFallbacks = ['release']
        }
    }

}

dependencies {
    implementation project(":android-app")
}
