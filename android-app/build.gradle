import com.android.build.gradle.internal.variant.BaseVariantData

/*
 * Copyright 2018 Google LLC
 *  
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *  
 *     http://www.apache.org/licenses/LICENSE-2.0
 *  
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *  
 */

apply plugin: 'com.android.application'
//apply plugin: 'com.google.gms.oss.licenses.plugin'
apply plugin: 'kotlin-platform-android'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()

if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    android.signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['keyPassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['storePassword']
        }
    }
} else {
    android.signingConfigs {
        release {
            storeFile android.signingConfigs.debug.storeFile
            storePassword android.signingConfigs.debug.storePassword
            keyAlias android.signingConfigs.debug.keyAlias
            keyPassword android.signingConfigs.debug.keyPassword
        }
    }
}

android {
    compileSdkVersion buildConfig.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        versionCode buildConfig.version
        versionName buildConfig.versionName
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled true
    }

    // Specifies one flavor dimension.
    flavorDimensions "instant"
    productFlavors {
        instant {
            dimension "instant"
        }
        installed {
            dimension "instant"
            versionCode buildConfig.version + 1
        }
    }

    buildTypes {
        debugMini {
            initWith debug
            minifyEnabled true
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "proguard.pro"
            matchingFallbacks = ['debug']
        }

        debugMiniOptim {
            initWith debugMini
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), "proguard.pro"
            matchingFallbacks = ['debug']
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "proguard.pro"
        }

        releaseOptim {
            initWith release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), "proguard.pro"
            matchingFallbacks = ['release']
        }
    }

    packagingOptions {
        exclude "META-INF/**.kotlin_module"
    }
//    dynamicFeatures = [":dynamic_feature"]


}


dependencies {
    implementation project(":libsudoku")
    implementation project(":libcanvas")
    implementation project(":libsudokurenderer")

    api "androidx.appcompat:appcompat:${versions.supportLibrary}"
    api "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"
    api "androidx.annotation:annotation:${versions.supportLibrary}"
    implementation "com.google.android.instantapps:instantapps:${versions.instantApps}"

    implementation "android.arch.navigation:navigation-fragment-ktx:${versions.navigation}"
    implementation "android.arch.navigation:navigation-ui-ktx:${versions.navigation}"

    api "androidx.lifecycle:lifecycle-extensions:${versions.lifecycles}"

    implementation "androidx.core:core-ktx:${versions.supportLibrary}"

    implementation "com.google.android.gms:play-services-oss-licenses:${versions.playServices}"

    implementation "com.google.code.gson:gson:${versions.gson}"

    api "com.google.dagger:dagger:${versions.dagger}"
    api "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"
    implementation 'android.arch.navigation:navigation-fragment:1.0.0-alpha06'

//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })
}
